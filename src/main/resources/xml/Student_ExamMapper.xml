<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="thanhtuu.springmvc.Dao.Student_ExamMapper">
  <resultMap id="BaseResultMap" type="thanhtuu.springmvc.Domain.Student_Exam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="classId" jdbcType="INTEGER" property="classid" />
    <result column="studentId" jdbcType="INTEGER" property="studentid" />
    <result column="subjectId" jdbcType="INTEGER" property="subjectid" />
    <result column="examId" jdbcType="INTEGER" property="examid" />
    <result column="examsId" jdbcType="INTEGER" property="examsid" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="modifiedAt" jdbcType="DATE" property="modifiedat" />
    <result column="createdAt" jdbcType="DATE" property="createdat" />
  </resultMap>
  <sql id="Base_Column_List">
    id, classId, studentId, subjectId, examId, examsId, score, modifiedAt, createdAt
  </sql>
  <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_exam
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long">
    delete from student_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="thanhtuu.springmvc.Domain.Student_Exam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 01 14:10:28 ICT 2016.
    -->
    insert into student_exam (id, classId, studentId, 
      subjectId, examId, examsId, 
      score, modifiedAt, createdAt
      )
    values (#{id,jdbcType=INTEGER}, #{classid,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER}, 
      #{subjectid,jdbcType=INTEGER}, #{examid,jdbcType=INTEGER}, #{examsid,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{modifiedat,jdbcType=DATE}, #{createdat,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="thanhtuu.springmvc.Domain.Student_Exam"
  useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into student_exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classid != null">
        classId,
      </if>
      <if test="studentid != null">
        studentId,
      </if>
      <if test="subjectid != null">
        subjectId,
      </if>
      <if test="examid != null">
        examId,
      </if>
      <if test="examsid != null">
        examsId,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="modifiedat != null">
        modifiedAt,
      </if>
      <if test="createdat != null">
        createdAt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        #{studentid,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null">
        #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="examid != null">
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="examsid != null">
        #{examsid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="modifiedat != null">
        #{modifiedat,jdbcType=DATE},
      </if>
      <if test="createdat != null">
        #{createdat,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="thanhtuu.springmvc.Domain.Student_Exam">
    update student_exam
    <set>
      <if test="classid != null">
        classId = #{classid,jdbcType=INTEGER},
      </if>
      <if test="studentid != null">
        studentId = #{studentid,jdbcType=INTEGER},
      </if>
      <if test="subjectid != null">
        subjectId = #{subjectid,jdbcType=INTEGER},
      </if>
      <if test="examid != null">
        examId = #{examid,jdbcType=INTEGER},
      </if>
      <if test="examsid != null">
        examsId = #{examsid,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="modifiedat != null">
        modifiedAt = #{modifiedat,jdbcType=DATE},
      </if>
      <if test="createdat != null">
        createdAt = #{createdat,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="thanhtuu.springmvc.Domain.Student_Exam">
    update student_exam
    set classId = #{classid,jdbcType=INTEGER},
      studentId = #{studentid,jdbcType=INTEGER},
      subjectId = #{subjectid,jdbcType=INTEGER},
      examId = #{examid,jdbcType=INTEGER},
      examsId = #{examsid,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      modifiedAt = #{modifiedat,jdbcType=DATE},
      createdAt = #{createdat,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <sql id="studentId">
    studentId
  </sql>
  <select id="getStudentExamsCountBySubjectId" resultType="long">
    select count(DISTINCT <include refid="studentId" />)
    from student_exam
    where subjectId = #{subjectId,jdbcType=INTEGER}
    and examsId = #{examsId,jdbcType=INTEGER}
  </select>
  
  <select id="getStudentExamsCountByClassId" resultType="long">
    select count(DISTINCT <include refid="studentId" />)
    from student_exam
    where classId = #{classId,jdbcType=INTEGER}
    and examsId = #{examsId,jdbcType=INTEGER}
  </select>
  
  <select id="getExamsCountOfStudentByClassId" resultType="long">
    select count(*)
    from student_exam
    where classId = #{classId,jdbcType=INTEGER}
    and examsId = #{examsId,jdbcType=INTEGER}
    and studentId = #{studentId,jdbcType=INTEGER}
  </select>

  <select id="getExamsCountOfStudentBySubjectId" resultType="long">
    select count(*)
    from student_exam
    where subjectId = #{subjectId,jdbcType=INTEGER}
    and examsId = #{examsId,jdbcType=INTEGER}
    and studentId = #{studentId,jdbcType=INTEGER}
  </select>
  
  <select id="getResultExam" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student_exam
    where classId = #{classId,jdbcType=INTEGER}
    and examsId = #{examsId,jdbcType=INTEGER}
    and studentId = #{studentId,jdbcType=INTEGER}
  </select>
  
  <select id="getBySubjectIdExamsId" resultMap="BaseResultMap">
    select 
	<include refid="Base_Column_List" />
    from student_exam
    where examsId = #{examsId,jdbcType=INTEGER}
    and subjectId = #{subjectId,jdbcType=INTEGER}
  </select>
  
  <select id="getBySubjectIdClassIdExamsId" resultMap="BaseResultMap">
    select 
	<include refid="Base_Column_List" />
    from student_exam
    where examsId = #{examsId,jdbcType=INTEGER}
    and classId = #{classId,jdbcType=INTEGER}
  </select>
</mapper>